{"version":3,"sources":["components/header/Header.module.scss","pages/records/record/Record.module.scss","components/footer/footer.module.scss","pages/records/Records.module.scss","logo.svg","config.js","pages/auth/login/Login.js","store/record/actions.js","pages/records/types.js","pages/records/record/Record.js","pages/records/Records.js","components/header/Header.js","components/footer/footer.js","App.js","serviceWorker.js","store/record/reducer.js","index.js","pages/auth/login/Login.module.scss"],"names":["module","exports","FIREBASE_CONFIG","API_URL","Login","state","error","loading","message","className","classes","bordered","src","logo","alt","this","labelCol","span","wrapperCol","name","initialValues","username","password","remember","onFinish","credentials","auth","email","returnSecureToken","setState","axios","post","then","response","localStorage","setItem","JSON","stringify","data","props","history","push","pathname","catch","console","log","onFinishFailed","Item","rules","required","placeholder","prefix","UserOutlined","Password","LockOutlined","type","htmlType","disabled","block","icon","LoginOutlined","React","Component","ADD_RECORD","GET_RECORDS","DELETE_RECORD","UPDATE_RECORD","returnRecords","records","returnRecord","record","types","id","parentId","connect","propRecord","propError","dispatch","onCreate","user","parse","getItem","idToken","success","repsonse","actions","onUpdate","getState","put","key","forEach","stud","formRef","createRef","initRecord","amount","time","Date","useState","location","setRecord","setLoading","msg","useEffect","xs","sm","md","lg","xl","ref","updatedAt","createdAt","deletedAt","thousandSeparator","suffix","style","textAlign","value","onValueChange","e","floatValue","label","onChange","map","Option","defaultValue","moment","Records","cols","title","render","text","format","subColumns","dataIndex","onClick","onEdit","find","navigate","getRecords","rowKey","dataSource","propRecords","columns","size","pagination","scroll","x","showHeader","defaultExpandAllRows","expandedRowRender","days","res","fn","year","month","o","array","filter","d","slice","match","day","Object","entries","onDelete","delete","get","Header","current","window","clear","menu","selectedKeys","mode","theme","TeamOutlined","LogoutOutlined","footer","to","UserAddOutlined","App","routes","template","isLoggedIn","path","component","Record","extact","from","Fragment","withRouter","Boolean","hostname","initialState","updated","reducer","action","store","createStore","applyMiddleware","next","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06fb090a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__rEkyY\",\"ant-menu-item\":\"Header_ant-menu-item__4qJu2\",\"ant-page-header\":\"Header_ant-page-header__mdTpg\",\"ant-menu\":\"Header_ant-menu__kGI51\",\"ant-menu-light\":\"Header_ant-menu-light__3WaJs\",\"Logout\":\"Header_Logout__3wQSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"Record_FormContainer__uMdQv\",\"Form\":\"Record_Form__8Ollr\",\"ant-card-head\":\"Record_ant-card-head__3S9DO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"footer_Footer__oVnzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnDelete\":\"Records_BtnDelete__mARzC\"};","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","export const FIREBASE_CONFIG = {\r\n  apiKey: \"AIzaSyCgYnE69ejd0DLiw7uBLbraJQYw2PPxdkM\",\r\n  authDomain: \"fir-app-6e33a.firebaseapp.com\",\r\n  databaseURL: \"https://fir-app-6e33a.firebaseio.com\",\r\n  projectId: \"fir-app-6e33a\",\r\n  storageBucket: \"fir-app-6e33a.appspot.com\",\r\n  messagingSenderId: \"694006374372\",\r\n  appId: \"1:694006374372:web:613072751669b5e7b8b1f1\",\r\n  measurementId: \"G-4C1T8CQR8F\",\r\n};\r\n\r\nexport const API_URL = \"https://fir-app-6e33a.firebaseio.com/\";\r\n","import React from \"react\";\r\nimport { Card, Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined, LoginOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nimport logo from \"./../../../logo.svg\";\r\nimport * as classes from \"./Login.module.scss\";\r\nimport { FIREBASE_CONFIG } from \"../../../config\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    error: false,\r\n    loading: false,\r\n    message: \"\",\r\n  };\r\n\r\n  render() {\r\n    // console.log(FIREBASE_CONFIG);\r\n    // console.log(this.props);\r\n\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 24 },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: {\r\n        // offset: 8,\r\n        span: 24,\r\n      },\r\n    };\r\n\r\n    const onFinish = (credentials) => {\r\n      // console.log('onFinish result : ', credentials);\r\n      let auth = {\r\n        email: credentials.username,\r\n        password: credentials.password,\r\n        returnSecureToken: true,\r\n      };\r\n      this.setState({ loading: true });\r\n      axios\r\n        .post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\r\n            FIREBASE_CONFIG.apiKey,\r\n          auth\r\n        )\r\n        .then((response) => {\r\n          // console.log('logged in response: ', response);\r\n          localStorage.setItem(\"auth\", JSON.stringify(response.data));\r\n          this.props.history.push({ pathname: \"/record\" });\r\n          this.setState({ loading: false });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: true });\r\n          this.setState({\r\n            message: (\r\n              <div className={classes.Error}>\r\n                Username or password is incorrect!\r\n              </div>\r\n            ),\r\n          });\r\n          console.log(error);\r\n          this.setState({ loading: false });\r\n        });\r\n    };\r\n\r\n    const onFinishFailed = (error) => {\r\n      console.log(\"onFinishFailed error : \", error);\r\n    };\r\n\r\n    const onSignup = (credentials) => {\r\n      axios\r\n        .post(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\r\n            FIREBASE_CONFIG.apiKey,\r\n          credentials\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          localStorage.setItem(\"auth\", JSON.stringify(response));\r\n          this.props.history.push({ pathname: \"/record\" });\r\n          // window.location.reload();\r\n          this.setState({ loading: false });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: true });\r\n          this.setState({\r\n            message: (\r\n              <div className={classes.Error}>\r\n                Email address is already in use!\r\n              </div>\r\n            ),\r\n          });\r\n          console.log(error);\r\n          this.setState({ loading: false });\r\n        });\r\n    };\r\n\r\n    const navigate = () => {\r\n      this.props.history.push({ pathname: \"/records\" });\r\n    };\r\n\r\n    return (\r\n      <div className={classes.Login}>\r\n        <div className={classes.LoginContainer}>\r\n          <Card bordered={true} className={classes.LoginCard}>\r\n            {/* BRANDING */}\r\n            <img src={logo} className={classes.Logo} alt=\"logo\" />\r\n            <h1>JSX Learning</h1>\r\n            <br />\r\n\r\n            {/* ERROR MESSAGE */}\r\n            {this.state.error && this.state.message}\r\n\r\n            {/* LOGIN FORM */}\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{\r\n                username: \"quochuy.dev@gmail.com\",\r\n                password: \"Quochuydev548!\",\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[{ required: true, message: \"Username is required\" }]}\r\n              >\r\n                <Input placeholder=\"Username\" prefix={<UserOutlined />} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[{ required: true, message: \"Password is required\" }]}\r\n              >\r\n                <Input.Password\r\n                  placeholder=\"Password\"\r\n                  prefix={<LockOutlined />}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item {...tailLayout}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  disabled={this.state.loading}\r\n                  block\r\n                  icon={<LoginOutlined />}\r\n                >\r\n                  {this.state.loading ? \"Please wait..\" : \"Login\"}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { message } from \"antd\";\r\n\r\nexport const ADD_RECORD = \"ADD_RECORD\";\r\nexport const GET_RECORDS = \"GET_RECORDS\";\r\nexport const DELETE_RECORD = \"DELETE_RECORD\";\r\nexport const UPDATE_RECORD = \"UPDATE_RECORD\";\r\n\r\nexport const returnRecords = (records, error) => {\r\n  return {\r\n    type: GET_RECORDS,\r\n    records: records,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const returnRecord = (record, error) => {\r\n  return {\r\n    type: UPDATE_RECORD,\r\n    record: record,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const getRecords = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  return (dispatch) => {\r\n    axios\r\n      .get(API_URL + \"records.json?auth=\" + user.idToken)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        let records = [];\r\n        for (let key in response.data) {\r\n          // console.log(response.data[key]);\r\n          records.push({\r\n            key: key,\r\n            amount: response.data[key][\"amount\"],\r\n            type: response.data[key][\"type\"],\r\n            time: response.data[key][\"time\"],\r\n            createdAt: response.data[key][\"createdAt\"],\r\n          });\r\n        }\r\n        dispatch(returnRecords(records, false));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.repsonse);\r\n        dispatch(returnRecords([], true));\r\n        message.error(\"Session expired, Please login.\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const addRecord = (record) => {\r\n  // console.log(record);\r\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  return (dispatch) => {\r\n    axios\r\n      .post(API_URL + \"records.json?auth=\" + user.idToken, record)\r\n      .then((response) => {\r\n        console.log(\"add record response: \", response);\r\n        message.success(\"Success! Record information saved successfully.\");\r\n        dispatch(returnRecord({ response }, false));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.repsonse);\r\n        message.error(\r\n          \"Opps! Something went wrong. Unable to save record record.\"\r\n        );\r\n        dispatch(returnRecord(null, true));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateRecord = (record) => {\r\n  // console.log(record);\r\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .put(\r\n        API_URL + \"records/\" + record.key + \".json?auth=\" + user.idToken,\r\n        record\r\n      )\r\n      .then((response) => {\r\n        // console.log('record update response:', response.data);\r\n        // dispatch(returnRecord({ response.data }, false));\r\n        let record = response.data;\r\n        getState().records.forEach((stud) => {\r\n          if (stud.key === record.key) {\r\n            stud = record;\r\n          }\r\n        });\r\n        // console.log(getState().records);\r\n        message.success(\"Success! Record information saved successfully.\");\r\n        dispatch(returnRecord(record, false));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.repsonse);\r\n        message.error(\r\n          \"Opps! Something went wrong. Unable to save record record.\"\r\n        );\r\n        dispatch(returnRecords(getState().records, true));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteRecord = (record) => {\r\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .delete(API_URL + \"records/\" + record.key + \"/.json?auth=\" + user.idToken)\r\n      .then((response) => {\r\n        // console.log(response);\r\n\r\n        // FILTER THE RECORD LIST ONCE RECORD DELETED\r\n        let records = getState().records.filter((stud) => {\r\n          return stud.key !== record.key;\r\n        });\r\n        dispatch(returnRecords(records, false));\r\n\r\n        // GET RECORDS FROM SERVER\r\n        // dispatch(getRecords());\r\n\r\n        message.success(\"Record record deleted.\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        dispatch(returnRecords(null, true));\r\n        message.error(\r\n          \"Opps! Something went wrong. Unable to delete record record.\"\r\n        );\r\n      });\r\n  };\r\n};\r\n","export const types = [\r\n  {\r\n    id: 1,\r\n    name: \"Ăn uống\",\r\n    parentId: null,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Ăn\",\r\n    parentId: 1,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Uống\",\r\n    parentId: 1,\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  message,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport * as classes from \"./Record.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/record/actions\";\r\nimport { types } from \"../types\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\n\r\nfunction Record(props) {\r\n  const formRef = React.createRef();\r\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  const initRecord = {\r\n    amount: 0,\r\n    time: new Date(),\r\n    type: null,\r\n  }\r\n  const [record, setRecord] = useState(props.location.state?.record || initRecord);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  // console.log(props.location.state.record, loading);\r\n  useEffect(() => {\r\n    if (props.propError) {\r\n      setLoading(false);\r\n      message.error(\"Something went wrong. Unable to save record information.\");\r\n    }\r\n  }, [props.propError]);\r\n\r\n  useEffect(() => {\r\n    if (props.propRecord && loading) {\r\n      setLoading(false);\r\n      props.history.push({ pathname: \"/records\" });\r\n    }\r\n  }, [props.propRecord]);\r\n\r\n  const onFinish = () => {\r\n    console.log(\"onFinish data : \", record);\r\n    console.log(\"props.location.state : \", props.location.state);\r\n    if (\r\n      props.location.state &&\r\n      props.location.state.record &&\r\n      props.location.state.record.key\r\n    ) {\r\n      setLoading(true);\r\n      props.onUpdate({\r\n        ...record,\r\n        updatedAt: new Date(),\r\n        key: props.location.state.record.key,\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      props.onCreate({\r\n        ...record,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        deletedAt: null,\r\n      });\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const onReset = () => {\r\n    setRecord(initRecord)\r\n  };\r\n\r\n  return (\r\n    <Row className={classes.FormContainer}>\r\n      <Col xs={24} sm={24} md={12} lg={12} xl={12}>\r\n          {error && msg}\r\n          <Form\r\n            name=\"basic\"\r\n            ref={formRef}\r\n            name=\"control-ref\"\r\n            onFinish={onFinish}\r\n          >\r\n            <NumberFormat\r\n              className=\"ant-input w-full\"\r\n              thousandSeparator={true}\r\n              suffix={\"đ\"}\r\n              style={{ textAlign: \"right\" }}\r\n              value={record.amount}\r\n              onValueChange={(e) => {\r\n                setRecord({ ...record, amount: e.floatValue });\r\n              }}\r\n            />\r\n            <br />\r\n            <Select\r\n              className=\"m-t-md w-full\"\r\n              label=\"Type\"\r\n              name=\"type\"\r\n              placeholder=\"Type\"\r\n              value={record.type}\r\n              onChange={(e) => {\r\n                setRecord({ ...record, type: e });\r\n              }}\r\n            >\r\n              {types.map((e) => (\r\n                <Select.Option key={e.id} value={e.id}>\r\n                  {e.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n            <br />\r\n            <DatePicker\r\n              className=\"m-t-md w-full\"\r\n              name=\"time\"\r\n              onChange={(e) => setRecord({ ...record, time: new Date(e) })}\r\n              defaultValue={\r\n                record.time ? moment(record.time, \"YYYY-MM-DD\") : null\r\n              }\r\n            />\r\n            <br />\r\n            <Button\r\n              className=\"m-t-md\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={loading}\r\n              loading={loading}\r\n            >\r\n              {loading ? \"Saving..\" : \"Submit\"}\r\n            </Button>\r\n          </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    propRecord: state.record,\r\n    propError: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreate: (record) => dispatch(actions.addRecord(record)),\r\n    onUpdate: (record) => dispatch(actions.updateRecord(record)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);\r\n","import React from \"react\";\r\nimport { Table, Space, Button, Popconfirm } from \"antd\";\r\nimport { UserAddOutlined } from \"@ant-design/icons\";\r\nimport * as classes from \"./Records.module.scss\";\r\nimport moment from \"moment\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/record/actions\";\r\nimport { types } from './types'\r\n\r\nexport class Records extends React.Component {\r\n  user = JSON.parse(localStorage.getItem(\"auth\"));\r\n  cols = [\r\n    {\r\n      title: \"day\",\r\n      key: \"day\",\r\n      render: (text, record) => (\r\n        <span>\r\n          {record && record['days'][0] && record['days'][0]['time'] ? moment(record['days'][0]['time']).format('DD-MM-YYYY') : null}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n  subColumns = [\r\n    {\r\n      title: \"type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      render: (text, record) => (\r\n        <>\r\n          <span onClick={() => this.onEdit(record)} >\r\n            {types.find(e => e.id == record.type) ? types.find(e => e.id == record.type)['name'] : null}\r\n          </span>\r\n          {/* <Popconfirm\r\n            title=\"Are you sure you want to delete?\"\r\n            onConfirm={() => this.props.onDelete(record)}\r\n            okText=\"Delete\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button className={classes.BtnDelete}>Delete</Button>\r\n          </Popconfirm> */}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      render: (text, record) => (\r\n        <span onClick={() => this.onEdit(record)} >\r\n          {record.amount}\r\n        </span>\r\n      ),\r\n    },\r\n  ]\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      records: [],\r\n      error: false,\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  onEdit = (record) => {\r\n    this.props.history.push({\r\n      pathname: \"/records/record\",\r\n      state: {\r\n        record,\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getRecords();\r\n  }\r\n\r\n  navigate = () => {\r\n    const pathname = \"/records/record\";\r\n    this.props.history.push({ pathname });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    // console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table rowKey='day' dataSource={this.props.propRecords} columns={this.cols} size={'small'}\r\n          pagination={false} scroll={{ x: '100%' }} showHeader={false}\r\n          // expandIconColumnIndex={-1}\r\n          defaultExpandAllRows={true}\r\n          expandedRowRender={record => <Table rowKey='key' columns={this.subColumns} \r\n          dataSource={record.days} pagination={false} showHeader={false} />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  function thisYear() {\r\n    return new Date().getFullYear()\r\n  }\r\n\r\n  function thisMonth() {\r\n    var d = new Date();\r\n    var n = d.getMonth();\r\n    return n + 1;\r\n  }\r\n\r\n  const records = state.records\r\n\r\n  let res = {};\r\n  \r\n  let fn = (year, month, o = res, array = records) => {\r\n    o[month] = array.filter(({time: d}) => {\r\n      return d ? `${year}-${month}` === d.slice(5, 10) : false\r\n    }) // 0 7\r\n  }\r\n  \r\n  for (let {time} of records) {\r\n    if(time) {\r\n      let [year, month, day] = time.match(/\\d+/g);\r\n      if (!res) res = {};\r\n      fn(month, day)\r\n    }\r\n  }\r\n  \r\n  const propRecords = []\r\n  for (const [key, value] of Object.entries(res)) {\r\n    propRecords.push({ day: key, days: value })\r\n  }\r\n  console.log(propRecords);\r\n\r\n  return {\r\n    propRecords,\r\n    propError: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDelete: (record) => dispatch(actions.deleteRecord(record)),\r\n    getRecords: () => dispatch(actions.getRecords()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Records);\r\n","import React from \"react\";\r\nimport * as classes from \"./Header.module.scss\";\r\nimport { PageHeader, Menu } from \"antd\";\r\nimport {\r\n  SnippetsOutlined,\r\n  CodeOutlined,\r\n  BarChartOutlined,\r\n  LogoutOutlined,\r\n  TeamOutlined,\r\n  TrophyOutlined,\r\n} from \"@ant-design/icons\";\r\n// import { MenuItem } from './menuitem/MenuItem';\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    current: window.location.pathname,\r\n  };\r\n\r\n  navigate = (e) => {\r\n    this.props.history.push(e.key);\r\n    if (e.key === \"/login\") {\r\n      localStorage.clear();\r\n    } else {\r\n      this.setState({ current: window.location.pathname });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    const menu = (\r\n      <Menu\r\n        onClick={this.navigate}\r\n        selectedKeys={[current]}\r\n        mode=\"horizontal\"\r\n        theme=\"dark\"\r\n      >\r\n        <Menu.Item key=\"/\" icon={<TeamOutlined />}>\r\n          Records\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"/login\"\r\n          icon={<LogoutOutlined />}\r\n          className={classes.Logout}\r\n        >\r\n          Logout\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    return <PageHeader className={classes.AppHeader}>{menu}</PageHeader>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport * as classes from './footer.module.scss';\r\nimport { UserAddOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction footer(props) {\r\n  const pathname = \"/records/record\";\r\n  return (\r\n    <footer className={classes.Footer}>\r\n      <Link to={pathname}>\r\n        <UserAddOutlined />\r\n      </Link>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default footer;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/auth/login/Login\";\r\nimport Record from \"./pages/records/record/Record\";\r\nimport Records from \"./pages/records/Records\";\r\n\r\nimport Header from \"./components/header/Header\";\r\nimport Footer from \"./components/footer/footer\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    let isLoggedIn = localStorage.getItem(\"auth\");\r\n    var routes;\r\n    var template;\r\n\r\n    routes = (\r\n      <Switch>\r\n        {/* { isLoggedIn && <Route path=\"/records\" component={Record} /> }\r\n        { isLoggedIn && <Route path=\"/record\" component={Record} /> }\r\n        { !isLoggedIn && <Route path=\"/login\" component={Login} /> }\r\n        { isLoggedIn ? <Redirect from=\"/login\" to=\"/record\" /> : <Redirect from=\"/record\" to=\"/login\" /> }\r\n        { isLoggedIn ? <Route path=\"/\" extact component={Record} /> : <Route path=\"/\" extact component={Login} /> } */}\r\n      </Switch>\r\n    );\r\n\r\n    if (isLoggedIn) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/records/record\" component={Record} />\r\n          <Route path=\"/records\" component={Records} />\r\n          <Route path=\"/\" extact component={Records} />\r\n          <Redirect from=\"/login\" to=\"/record\" />\r\n        </Switch>\r\n      );\r\n\r\n      template = (\r\n        <div className=\"App\">\r\n          <Header {...this.props} />\r\n          <main>{routes}</main>\r\n          <Footer />\r\n        </div>\r\n      );\r\n    } else {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" extact component={Login} />\r\n          <Redirect from=\"/record\" to=\"/login\" />\r\n        </Switch>\r\n      );\r\n      template = <div className=\"App\">{routes}</div>;\r\n    }\r\n\r\n    return <React.Fragment>{template}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from \"./actions\";\r\n\r\nconst initialState = {\r\n  records: [],\r\n  updated: false,\r\n  error: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  // console.log(state, action);\r\n  switch (action.type) {\r\n    case actions.GET_RECORDS:\r\n      return {\r\n        ...state,\r\n        records: action.records,\r\n        error: action.error,\r\n      };\r\n    case actions.ADD_RECORD:\r\n      return {\r\n        ...state,\r\n        record: action.record,\r\n      };\r\n    case actions.UPDATE_RECORD:\r\n      return {\r\n        ...state,\r\n        record: action.record,\r\n        error: action.error,\r\n      };\r\n    case actions.DELETE_RECORD:\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        updated: action.updated,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport reducer from \"./store/record/reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// import axios from 'axios';\r\n\r\n/* axios.interceptors.request.use(request=> {\r\n  // console.log(request);\r\n}); */\r\n\r\nconst logger = (store) => {\r\n  return (next) => {\r\n    return (action) => {\r\n      // console.log('Middleware dispatching action: ', action );\r\n      const result = next(action);\r\n      // console.log('Middleware next state', store.getState());\r\n      return result;\r\n    };\r\n  };\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(logger, thunk));\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3HZR_\",\"LoginContainer\":\"Login_LoginContainer__37N0b\",\"LoginCard\":\"Login_LoginCard__2LDlw\",\"ant-card-body\":\"Login_ant-card-body__2jmDS\",\"Logo\":\"Login_Logo__2MwYJ\",\"Error\":\"Login_Error__25cPh\"};"],"sourceRoot":""}