{"version":3,"sources":["components/header/Header.module.scss","pages/records/record/Record.module.scss","pages/records/Records.module.scss","components/footer/footer.module.scss","logo.svg","config.js","pages/auth/login/Login.js","store/record/actions.js","pages/records/types.js","pages/records/record/Record.js","pages/records/Records.js","components/header/Header.js","components/footer/footer.js","App.js","serviceWorker.js","store/record/reducer.js","index.js","pages/auth/login/Login.module.scss"],"names":["module","exports","FIREBASE_CONFIG","API_URL","Login","state","error","loading","message","tailLayout","wrapperCol","span","className","classes","bordered","src","logo","alt","this","labelCol","name","initialValues","username","password","remember","onFinish","credentials","auth","email","returnSecureToken","setState","axios","post","then","response","localStorage","setItem","JSON","stringify","data","props","history","push","pathname","catch","console","log","onFinishFailed","Item","rules","required","placeholder","prefix","UserOutlined","Password","LockOutlined","type","htmlType","disabled","block","icon","LoginOutlined","React","Component","ADD_RECORD","GET_RECORDS","DELETE_RECORD","UPDATE_RECORD","returnRecords","records","returnRecord","record","types","id","parentId","connect","propRecord","propError","dispatch","onCreate","user","parse","getItem","idToken","success","repsonse","actions","onUpdate","getState","put","key","forEach","stud","formRef","createRef","initRecord","amount","time","Date","useState","location","setRecord","setLoading","msg","useEffect","xs","sm","md","lg","xl","ref","updatedAt","createdAt","deletedAt","thousandSeparator","suffix","style","textAlign","value","onValueChange","e","floatValue","label","onChange","map","Option","defaultValue","moment","Records","cols","title","render","text","format","subColumns","dataIndex","onClick","onEdit","find","displayType","onConfirm","onDelete","okText","cancelText","placement","CloseOutlined","navigate","getRecords","rowKey","dataSource","propRecords","columns","size","pagination","scroll","x","showHeader","defaultExpandAllRows","expandedRowRender","days","res","fn","year","month","o","array","filter","d","slice","match","day","Object","entries","delete","get","Header","current","window","clear","menu","selectedKeys","mode","theme","TeamOutlined","LogoutOutlined","footer","to","PlusCircleOutlined","App","routes","template","isLoggedIn","path","component","Record","extact","from","Fragment","withRouter","Boolean","hostname","initialState","updated","reducer","action","store","createStore","applyMiddleware","next","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4fb709e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"Header_AppHeader__11CSH\",\"ant-menu-item\":\"Header_ant-menu-item__25oFb\",\"ant-page-header\":\"Header_ant-page-header__2CD4-\",\"ant-menu\":\"Header_ant-menu__1pvlQ\",\"ant-menu-light\":\"Header_ant-menu-light__3tidg\",\"Logout\":\"Header_Logout__1jBPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"Record_FormContainer__1GG3t\",\"Form\":\"Record_Form__1R2ox\",\"ant-card-head\":\"Record_ant-card-head__36pJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnDelete\":\"Records_BtnDelete__RHnu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"footer_Footer__2Vhlm\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyCgYnE69ejd0DLiw7uBLbraJQYw2PPxdkM\",\n  authDomain: \"fir-app-6e33a.firebaseapp.com\",\n  databaseURL: \"https://fir-app-6e33a.firebaseio.com\",\n  projectId: \"fir-app-6e33a\",\n  storageBucket: \"fir-app-6e33a.appspot.com\",\n  messagingSenderId: \"694006374372\",\n  appId: \"1:694006374372:web:613072751669b5e7b8b1f1\",\n  measurementId: \"G-4C1T8CQR8F\",\n};\n\nexport const API_URL = \"https://fir-app-6e33a.firebaseio.com/\";\n","import React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined, LoginOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nimport logo from \"./../../../logo.svg\";\nimport * as classes from \"./Login.module.scss\";\nimport { FIREBASE_CONFIG } from \"../../../config\";\n\nclass Login extends React.Component {\n  state = {\n    error: false,\n    loading: false,\n    message: \"\",\n  };\n\n  render() {\n    // console.log(FIREBASE_CONFIG);\n    // console.log(this.props);\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 24 },\n    };\n    const tailLayout = {\n      wrapperCol: {\n        // offset: 8,\n        span: 24,\n      },\n    };\n\n    const onFinish = (credentials) => {\n      // console.log('onFinish result : ', credentials);\n      let auth = {\n        email: credentials.username,\n        password: credentials.password,\n        returnSecureToken: true,\n      };\n      this.setState({ loading: true });\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\n            FIREBASE_CONFIG.apiKey,\n          auth\n        )\n        .then((response) => {\n          // console.log('logged in response: ', response);\n          localStorage.setItem(\"auth\", JSON.stringify(response.data));\n          this.props.history.push({ pathname: \"/record\" });\n          this.setState({ loading: false });\n        })\n        .catch((error) => {\n          this.setState({ error: true });\n          this.setState({\n            message: (\n              <div className={classes.Error}>\n                Username or password is incorrect!\n              </div>\n            ),\n          });\n          console.log(error);\n          this.setState({ loading: false });\n        });\n    };\n\n    const onFinishFailed = (error) => {\n      console.log(\"onFinishFailed error : \", error);\n    };\n\n    const onSignup = (credentials) => {\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\n            FIREBASE_CONFIG.apiKey,\n          credentials\n        )\n        .then((response) => {\n          console.log(response);\n          localStorage.setItem(\"auth\", JSON.stringify(response));\n          this.props.history.push({ pathname: \"/record\" });\n          // window.location.reload();\n          this.setState({ loading: false });\n        })\n        .catch((error) => {\n          this.setState({ error: true });\n          this.setState({\n            message: (\n              <div className={classes.Error}>\n                Email address is already in use!\n              </div>\n            ),\n          });\n          console.log(error);\n          this.setState({ loading: false });\n        });\n    };\n\n    const navigate = () => {\n      this.props.history.push({ pathname: \"/records\" });\n    };\n\n    return (\n      <div className={classes.Login}>\n        <div className={classes.LoginContainer}>\n          <Card bordered={true} className={classes.LoginCard}>\n            {/* BRANDING */}\n            <img src={logo} className={classes.Logo} alt=\"logo\" />\n            <h1>JSX Learning</h1>\n            <br />\n\n            {/* ERROR MESSAGE */}\n            {this.state.error && this.state.message}\n\n            {/* LOGIN FORM */}\n            <Form\n              {...layout}\n              name=\"basic\"\n              initialValues={{\n                username: \"quochuy.dev@gmail.com\",\n                password: \"Quochuydev548!\",\n                remember: true,\n              }}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                // label=\"Username\"\n                name=\"username\"\n                rules={[{ required: true, message: \"Username is required\" }]}\n              >\n                <Input placeholder=\"Username\" prefix={<UserOutlined />} />\n              </Form.Item>\n              <Form.Item\n                // label=\"Password\"\n                name=\"password\"\n                rules={[{ required: true, message: \"Password is required\" }]}\n              >\n                <Input.Password\n                  placeholder=\"Password\"\n                  prefix={<LockOutlined />}\n                />\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  disabled={this.state.loading}\n                  block\n                  icon={<LoginOutlined />}\n                >\n                  {this.state.loading ? \"Please wait..\" : \"Login\"}\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport { message } from \"antd\";\n\nexport const ADD_RECORD = \"ADD_RECORD\";\nexport const GET_RECORDS = \"GET_RECORDS\";\nexport const DELETE_RECORD = \"DELETE_RECORD\";\nexport const UPDATE_RECORD = \"UPDATE_RECORD\";\n\nexport const returnRecords = (records, error) => {\n  return {\n    type: GET_RECORDS,\n    records: records,\n    error: error,\n  };\n};\n\nexport const returnRecord = (record, error) => {\n  return {\n    type: UPDATE_RECORD,\n    record: record,\n    error: error,\n  };\n};\n\nexport const getRecords = () => {\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\n  return (dispatch) => {\n    axios\n      .get(API_URL + \"records.json?auth=\" + user.idToken)\n      .then((response) => {\n        // console.log(response);\n        let records = [];\n        for (let key in response.data) {\n          // console.log(response.data[key]);\n          records.push({\n            key: key,\n            amount: response.data[key][\"amount\"],\n            type: response.data[key][\"type\"],\n            time: response.data[key][\"time\"],\n            createdAt: response.data[key][\"createdAt\"],\n          });\n        }\n        dispatch(returnRecords(records, false));\n      })\n      .catch((error) => {\n        console.log(error.repsonse);\n        dispatch(returnRecords([], true));\n        message.error(\"Session expired, Please login.\");\n      });\n  };\n};\n\nexport const addRecord = (record) => {\n  // console.log(record);\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\n  return (dispatch) => {\n    axios\n      .post(API_URL + \"records.json?auth=\" + user.idToken, record)\n      .then((response) => {\n        console.log(\"add record response: \", response);\n        message.success(\"Success! Record information saved successfully.\");\n        dispatch(returnRecord({ response }, false));\n      })\n      .catch((error) => {\n        console.log(error.repsonse);\n        message.error(\n          \"Opps! Something went wrong. Unable to save record record.\"\n        );\n        dispatch(returnRecord(null, true));\n      });\n  };\n};\n\nexport const updateRecord = (record) => {\n  // console.log(record);\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\n  return (dispatch, getState) => {\n    axios\n      .put(\n        API_URL + \"records/\" + record.key + \".json?auth=\" + user.idToken,\n        record\n      )\n      .then((response) => {\n        // console.log('record update response:', response.data);\n        // dispatch(returnRecord({ response.data }, false));\n        let record = response.data;\n        getState().records.forEach((stud) => {\n          if (stud.key === record.key) {\n            stud = record;\n          }\n        });\n        // console.log(getState().records);\n        message.success(\"Success! Record information saved successfully.\");\n        dispatch(returnRecord(record, false));\n      })\n      .catch((error) => {\n        console.log(error.repsonse);\n        message.error(\n          \"Opps! Something went wrong. Unable to save record record.\"\n        );\n        dispatch(returnRecords(getState().records, true));\n      });\n  };\n};\n\nexport const deleteRecord = (record) => {\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\n  return (dispatch, getState) => {\n    axios\n      .delete(API_URL + \"records/\" + record.key + \"/.json?auth=\" + user.idToken)\n      .then((response) => {\n        // console.log(response);\n\n        // FILTER THE RECORD LIST ONCE RECORD DELETED\n        let records = getState().records.filter((stud) => {\n          return stud.key !== record.key;\n        });\n        dispatch(returnRecords(records, false));\n\n        // GET RECORDS FROM SERVER\n        // dispatch(getRecords());\n\n        message.success(\"Record record deleted.\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n        dispatch(returnRecords(null, true));\n        message.error(\n          \"Opps! Something went wrong. Unable to delete record record.\"\n        );\n      });\n  };\n};\n","export const types = [\n  {\n    id: 1,\n    name: \"Ăn uống\",\n    parentId: null,\n  },\n  {\n    id: 2,\n    name: \"Ăn\",\n    parentId: 1,\n  },\n  {\n    id: 3,\n    name: \"Uống\",\n    parentId: 1,\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  Form,\n  Input,\n  Button,\n  Select,\n  Row,\n  Col,\n  message,\n  DatePicker,\n} from \"antd\";\nimport * as classes from \"./Record.module.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/record/actions\";\nimport { types } from \"../types\";\nimport moment from \"moment\";\nimport NumberFormat from \"react-number-format\";\n\nfunction Record(props) {\n  const formRef = React.createRef();\n  const user = JSON.parse(localStorage.getItem(\"auth\"));\n  const initRecord = {\n    amount: 0,\n    time: new Date(),\n    type: null,\n  }\n  const [record, setRecord] = useState(props.location.state?.record || initRecord);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n\n  // console.log(props.location.state.record, loading);\n  useEffect(() => {\n    if (props.propError) {\n      setLoading(false);\n      message.error(\"Something went wrong. Unable to save record information.\");\n    }\n  }, [props.propError]);\n\n  useEffect(() => {\n    if (props.propRecord && loading) {\n      setLoading(false);\n      props.history.push({ pathname: \"/records\" });\n    }\n  }, [props.propRecord]);\n\n  const onFinish = () => {\n    console.log(\"onFinish data : \", record);\n    console.log(\"props.location.state : \", props.location.state);\n    if (\n      props.location.state &&\n      props.location.state.record &&\n      props.location.state.record.key\n    ) {\n      setLoading(true);\n      props.onUpdate({\n        ...record,\n        updatedAt: new Date(),\n        key: props.location.state.record.key,\n      });\n    } else {\n      setLoading(true);\n      props.onCreate({\n        ...record,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        deletedAt: null,\n      });\n      setLoading(true);\n    }\n  };\n\n  const onReset = () => {\n    setRecord(initRecord)\n  };\n\n  return (\n    <Row className={classes.FormContainer}>\n      <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n          {error && msg}\n          <Form\n            name=\"basic\"\n            ref={formRef}\n            name=\"control-ref\"\n            onFinish={onFinish}\n          >\n            <NumberFormat\n              className=\"ant-input w-full\"\n              thousandSeparator={true}\n              suffix={\"đ\"}\n              style={{ textAlign: \"right\" }}\n              value={record.amount}\n              onValueChange={(e) => {\n                setRecord({ ...record, amount: e.floatValue });\n              }}\n            />\n            <br />\n            <Select\n              className=\"m-t-md w-full\"\n              label=\"Type\"\n              name=\"type\"\n              placeholder=\"Type\"\n              value={record.type}\n              onChange={(e) => {\n                setRecord({ ...record, type: e });\n              }}\n            >\n              {types.map((e) => (\n                <Select.Option key={e.id} value={e.id}>\n                  {e.name}\n                </Select.Option>\n              ))}\n            </Select>\n            <br />\n            <DatePicker\n              className=\"m-t-md w-full\"\n              name=\"time\"\n              onChange={(e) => setRecord({ ...record, time: new Date(e) })}\n              defaultValue={\n                record.time ? moment(record.time, \"YYYY-MM-DD\") : null\n              }\n            />\n            <br />\n            <Button\n              className=\"m-t-md\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={loading}\n              loading={loading}\n            >\n              {loading ? \"Saving..\" : \"Submit\"}\n            </Button>\n          </Form>\n      </Col>\n    </Row>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    propRecord: state.record,\n    propError: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCreate: (record) => dispatch(actions.addRecord(record)),\n    onUpdate: (record) => dispatch(actions.updateRecord(record)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Record);\n","import React from \"react\";\nimport { Table, Space, Button, Popconfirm } from \"antd\";\nimport { UserAddOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport * as classes from \"./Records.module.scss\";\nimport moment from \"moment\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/record/actions\";\nimport { types } from \"./types\";\n\nimport NumberFormat from \"react-number-format\";\n\nfunction formatMoney(value) {\n  if (!value) {\n    value = 0;\n  }\n  return (\n    <NumberFormat\n      value={value}\n      displayType={\"text\"}\n      suffix={\" đ\"}\n      thousandSeparator={true}\n    />\n  );\n}\n\nexport class Records extends React.Component {\n  user = JSON.parse(localStorage.getItem(\"auth\"));\n  cols = [\n    {\n      title: \"day\",\n      key: \"day\",\n      render: (text, record) => (\n        <span>\n          {record && record[\"days\"][0] && record[\"days\"][0][\"time\"]\n            ? moment(record[\"days\"][0][\"time\"]).format(\"DD-MM-YYYY\")\n            : null}\n        </span>\n      ),\n    },\n  ];\n\n  subColumns = [\n    {\n      title: \"type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      render: (text, record) => (\n        <>\n          <span onClick={() => this.onEdit(record)}>\n            {types.find((e) => e.id == record.type)\n              ? types.find((e) => e.id == record.type)[\"name\"]\n              : null}\n          </span>\n        </>\n      ),\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (text, record) => (\n        <span className=\"float-right\">\n          <span onClick={() => this.onEdit(record)}>\n            {formatMoney(record.amount)}\n          </span>{\" \"}\n          <Popconfirm\n            title=\"Are you sure you want to delete?\"\n            onConfirm={() => this.props.onDelete(record)}\n            okText=\"Delete\"\n            cancelText=\"No\"\n            placement=\"left\"\n          >\n            <CloseOutlined className={classes.BtnDelete} />\n          </Popconfirm>\n        </span>\n      ),\n    },\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: [],\n      error: false,\n      loading: false,\n      message: \"\",\n    };\n  }\n\n  onEdit = (record) => {\n    this.props.history.push({\n      pathname: \"/records/record\",\n      state: {\n        record,\n      },\n    });\n  };\n\n  componentDidMount() {\n    this.props.getRecords();\n  }\n\n  navigate = () => {\n    const pathname = \"/records/record\";\n    this.props.history.push({ pathname });\n  };\n\n  componentDidUpdate() {\n    // console.log(this.props);\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          rowKey=\"day\"\n          dataSource={this.props.propRecords}\n          columns={this.cols}\n          size={\"small\"}\n          pagination={false}\n          scroll={{ x: \"100%\" }}\n          showHeader={false}\n          // expandIconColumnIndex={-1}\n          defaultExpandAllRows={true}\n          expandedRowRender={(record) => (\n            <Table\n              rowKey=\"key\"\n              columns={this.subColumns}\n              dataSource={record.days}\n              pagination={false}\n              showHeader={false}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  function thisYear() {\n    return new Date().getFullYear();\n  }\n\n  function thisMonth() {\n    var d = new Date();\n    var n = d.getMonth();\n    return n + 1;\n  }\n\n  const records = state.records;\n\n  let res = {};\n\n  let fn = (year, month, o = res, array = records) => {\n    o[month] = array.filter(({ time: d }) => {\n      return d ? `${year}-${month}` === d.slice(5, 10) : false;\n    }); // 0 7\n  };\n\n  for (let { time } of records) {\n    if (time) {\n      let [year, month, day] = time.match(/\\d+/g);\n      if (!res) res = {};\n      fn(month, day);\n    }\n  }\n\n  const propRecords = [];\n  for (const [key, value] of Object.entries(res)) {\n    propRecords.push({ day: key, days: value });\n  }\n  console.log(propRecords);\n\n  return {\n    propRecords,\n    propError: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDelete: (record) => dispatch(actions.deleteRecord(record)),\n    getRecords: () => dispatch(actions.getRecords()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Records);\n","import React from \"react\";\nimport * as classes from \"./Header.module.scss\";\nimport { PageHeader, Menu } from \"antd\";\nimport {\n  SnippetsOutlined,\n  CodeOutlined,\n  BarChartOutlined,\n  LogoutOutlined,\n  TeamOutlined,\n  TrophyOutlined,\n} from \"@ant-design/icons\";\n// import { MenuItem } from './menuitem/MenuItem';\n\nclass Header extends React.Component {\n  state = {\n    current: window.location.pathname,\n  };\n\n  navigate = (e) => {\n    this.props.history.push(e.key);\n    if (e.key === \"/login\") {\n      localStorage.clear();\n    } else {\n      this.setState({ current: window.location.pathname });\n    }\n  };\n\n  render() {\n    const { current } = this.state;\n    const menu = (\n      <Menu\n        onClick={this.navigate}\n        selectedKeys={[current]}\n        mode=\"horizontal\"\n        theme=\"dark\"\n      >\n        <Menu.Item key=\"/\" icon={<TeamOutlined />}>\n          Records\n        </Menu.Item>\n        <Menu.Item\n          key=\"/login\"\n          icon={<LogoutOutlined />}\n          className={classes.Logout}\n        >\n          Logout\n        </Menu.Item>\n      </Menu>\n    );\n    return <PageHeader className={classes.AppHeader}>{menu}</PageHeader>;\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport * as classes from \"./footer.module.scss\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nfunction footer(props) {\n  const pathname = \"/records/record\";\n  return (\n    <footer className={classes.Footer}>\n      <Link to={pathname}>\n        <PlusCircleOutlined />\n      </Link>\n    </footer>\n  );\n}\n\nexport default footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nimport Login from \"./pages/auth/login/Login\";\nimport Record from \"./pages/records/record/Record\";\nimport Records from \"./pages/records/Records\";\n\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/footer\";\n\nclass App extends Component {\n  render() {\n    let isLoggedIn = localStorage.getItem(\"auth\");\n    var routes;\n    var template;\n\n    routes = (\n      <Switch>\n        {/* { isLoggedIn && <Route path=\"/records\" component={Record} /> }\n        { isLoggedIn && <Route path=\"/record\" component={Record} /> }\n        { !isLoggedIn && <Route path=\"/login\" component={Login} /> }\n        { isLoggedIn ? <Redirect from=\"/login\" to=\"/record\" /> : <Redirect from=\"/record\" to=\"/login\" /> }\n        { isLoggedIn ? <Route path=\"/\" extact component={Record} /> : <Route path=\"/\" extact component={Login} /> } */}\n      </Switch>\n    );\n\n    if (isLoggedIn) {\n      routes = (\n        <Switch>\n          <Route path=\"/records/record\" component={Record} />\n          <Route path=\"/records\" component={Records} />\n          <Route path=\"/\" extact component={Records} />\n          <Redirect from=\"/login\" to=\"/record\" />\n        </Switch>\n      );\n\n      template = (\n        <div className=\"App\">\n          <Header {...this.props} />\n          <main>{routes}</main>\n          <Footer />\n        </div>\n      );\n    } else {\n      routes = (\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" extact component={Login} />\n          <Redirect from=\"/record\" to=\"/login\" />\n        </Switch>\n      );\n      template = <div className=\"App\">{routes}</div>;\n    }\n\n    return <React.Fragment>{template}</React.Fragment>;\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from \"./actions\";\n\nconst initialState = {\n  records: [],\n  updated: false,\n  error: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  // console.log(state, action);\n  switch (action.type) {\n    case actions.GET_RECORDS:\n      return {\n        ...state,\n        records: action.records,\n        error: action.error,\n      };\n    case actions.ADD_RECORD:\n      return {\n        ...state,\n        record: action.record,\n      };\n    case actions.UPDATE_RECORD:\n      return {\n        ...state,\n        record: action.record,\n        error: action.error,\n      };\n    case actions.DELETE_RECORD:\n      console.log(action);\n      return {\n        ...state,\n        updated: action.updated,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport reducer from \"./store/record/reducer\";\nimport thunk from \"redux-thunk\";\n\n// import axios from 'axios';\n\n/* axios.interceptors.request.use(request=> {\n  // console.log(request);\n}); */\n\nconst logger = (store) => {\n  return (next) => {\n    return (action) => {\n      // console.log('Middleware dispatching action: ', action );\n      const result = next(action);\n      // console.log('Middleware next state', store.getState());\n      return result;\n    };\n  };\n};\n\nconst store = createStore(reducer, applyMiddleware(logger, thunk));\n\nReactDOM.render(\n  <React.Fragment>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1ixBm\",\"LoginContainer\":\"Login_LoginContainer__3fIQi\",\"LoginCard\":\"Login_LoginCard__3jSgw\",\"ant-card-body\":\"Login_ant-card-body__3Js90\",\"Logo\":\"Login_Logo__QWasW\",\"Error\":\"Login_Error__qxXzr\"};"],"sourceRoot":""}